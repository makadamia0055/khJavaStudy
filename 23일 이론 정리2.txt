반복문
for : 초기화, 조건식, 증감식
while : 조건식
do-while : 조건식, 1번 실행

또 함정들이 있으니 잘 체크해보기.

배열 Array
- 같은 타입의 데이터들을 모아놓은 것
- 크기를 변경할 수 없다, 
- 배열 초기값.
	- 정수형 변수 : 0
	- 실수형 변수 : 0.0, 0.0f
	-참조변수 : null
Q; int [] nums = new int[5];
sysout(nums[0]) =? 
A : 0
Q2;
Student [] nums = new Student[5];
sysout(nums[0]) = ? 
A : null

배열을 복사하는 방법
		- for문
		- System.arraycopy(src, index, dest, destindex, len);
		-Arrays.copy(a, a.length);
		arr2 = arr1.clone();

참조변수를 복사
	-얕은 복사
	=> 주소 값을 공유, 객체를 공유하기 때문에 다른 곳에서 수정하면 영향을 받음
	-깊은 복사
	-> 객체를 새로 생성하여 복사. 별개의 객체이기 때문에 영향을 받지 않음.
	
-배열 초기화
자료형 [] 배열명 = { 값1, 값2, 값3};
자료형 [] 배열명;
배열명[index] = 값;


클래스 Class
추상화

"클래스 다이어그램"을 보고 클래스 필드, 메소드 만들 수 있기(별거 없음)

class Person{

private String pNo;


public void setPNo(String pNo){
	this.pNo = pNo;
}

}


- 메소드 오버로딩
	- 메소드 명이 같아야함
	- 매개변수의 개수가 다르거나
	- 매개변수의 타입이 달라야 함.
	- 리턴타입은 상관없음.

api, collection은 안나옴.

ObjectInputStream/ObjectOutputStream 은 나옴.

직렬화 Serialization
데이터를 파일에 쓰거나 네트워크 전송을 위해 보내려고 바이트 단위로 분해하여 순차적으로 보내야하는데 
이러한 작업을 직렬화라고 한다. 전송을 받을때는 이를 역순으로 실행해야하는데, 이를 역직렬화(Deserialization)이라고 한다. 

자바에서는 객체를 데이터스트림으로 만드는 것을 말하며, 객체의 데이터를 출력하기 위해서 연속적인 데이터로 변환하는 것이다.

직렬화가 가능한 조건
1. 기본타입
2. Serializable 인터페이스를 구현한 클래스(빈 인터페이스라 구현의무가 있는 메소드는 없다)
3. 객체멤버가 있을 경우 모두 Serializable을 implements해야한다.
4. transient가 사용된 멤버는 전송하지 않는다.(보안상의 이유가 있을때 사용)


객체 스트림
ObjectOutputStream
직렬화에 사용
ObjectInputStream
역직렬화에 사용
둘다 InputStream과 OutputStream을 직접 상속 받지만 보조 스트림이라 입출력을 기반스트림에 의존해야한다.
