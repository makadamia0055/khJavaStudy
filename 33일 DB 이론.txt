Database 특징
1. 실시간 접근성
2. 계속적 변화
3. 동시 공유
4. 내용에 따른 참조?(reference by content)

DBMS : 데이터 베이스에서 데이터 추출, 조작, 정의 , 제어 등을 할 수 있게 하는 데이터베이스 전용 관리 프로그램.
기능: 데이터 추출, 데이터 조작, 데이터 정의, 데이터 제어

DBMS 사용 이점
1. 데이터 독립화
	데이터와 응용프로그램 분리. 상호 영향정도 줄임
	파일 시스템의 경우는 데이터가 응용프로그램에 독립적이지 못함. 그 형태가 응용프로그램이 요구하는 바에 맞추어짐

2. 데이터 중복 최소화, 데이터 무결성 보장
	

3. 데이터 보안 향상
	응용프로그램은 DBMS가 허용하는 데이터에만 권한에 따라 접근 가능, 암호화 가능

4. 관리 편의성
백업 가능


관계 데이터 모델








릴레이션 특징
1.속성은 단일값을 가진다

2.속성은 서로 다른 이름을 가진다

3.한 속성의 값은 모두 같은 도메인 값을 가진다.
4.속성의 순서는 중요하지 않다
5. 릴레이션 내의 중복된 투플은 허용하지 않는다.
6. 튜플의 순서는 상관없다.




키

슈퍼키 :튜플을 식별가능하게 만드는 키, 혹은 키 집합

후보키 : 듀플을 식별하게 만드는 최소집합.

기본키 : 여러 후보 키 중 대표로 선정한 키. 기본키에는 밑줄을 그어 표시
튜플을 고유하게 식별 가능한 값,
null값을 허용하지 안히음.
키 값의 변동이 일어나지 않아야
최대한 적은 수의 속성을 가진 것이라야
향후 키를 사용하는 데에 있어서 문제 발생소지가 없어야..(주민번호 같은거 쓰면 개인정보유출 가능성)

대리키 : 기본키가 보안을 요하거나, 복잡하거나 마땅한게 없을때 만드는 가상의 속성 번호.
대리키surrogate key 혹은 인조키(artificial key)라고 부름.

대체키 : 기본키로 선정되지 않은 기본키

외래키 : '다른 릴레이션'의 기본키를 참조하는 '속성'을 말함.
	관계형 데이터 모델의 특징인 릴레이션간의 관계를 표현함.
	null 값과 중복 값이 허용됨. 
	다른 릴레이션의 기본키를 가져와 내 릴레이션의 속성으로 사용하는 것.

무결성 제약조건
	도메인 무결성 제약조건
	-릴레이션 내의 투플들이 각 속성의 도메인의 정의에 지정된 값만을 가져야 된다.

	개체 무결성 제약조건
	-기본키 제약이라고도 함. 기본키는 NULL값을 가지면 안되고 오직 하나의 값만 존재해야 한다.
	- 기본키 값이 같은 값은 삽입이 금지됨. 수정도 같은 기본키 값이 존재하거나 null 값으로의 수정은 거부됨.
	-삭제는 별다른 확인 없음. 즉시 수행함.
	
	참조 무결성 제약 조건
	-외래키 제약(foreign key constraint)이라고도하며 릴레이션 간의 참조 관계를 선언하는 제약 조건.
	- 자식 릴레이션의 외래키는 부모 릴레이션의 기본키와 도메인이 동일해야 됨. 
	- 자식 릴레이션의 값이 변경될 때 부모 릴레이션의 제약을 받는다.
	- 참조 관계의 값 변경에 따른 값 변경 여부는 설정으로 해줘야한다고 한다.
	- 부모 릴레이션에 없는 참조키를 삽입하려면 실패.
	명령어 : 
RESTRICTED : 자식 릴레이션에서 참조가 이루어지고 있는 경우 수정/삭제를 시도해도 수정/삭제를 막음.
CASECASE : 자식 릴레이션에서 참조가 이루어지고 있는 경우에 수정/삭제를 하면 자식릴레이션에도 적용
default: 자식 릴레이션에서 참조가 이루어지고 있는 경우 수정/삭제를 하면 미리 지정된 값으로 설정됨.
null : 자식 릴레이션에서 참조가 이루어지고 있는 경우 수정/삭제를 하면 null로 설정함. 



개념적 모델링


논리적 모델링

물리적 모델링
	실제 데이터베이스에 저장하기에 최적화된 물리적 구조를 설계


ER 모델

ER(Entity Relationship) 모델
세상 사물을 개체(entity)와 개체 간의 관계(realtionship)로 표현함.


개체 -네모

속성-동그라미

관계 - 마름모꼴


강한 개체 : 다른 개체 도움 없이 독자적으로 존재할 수 있는 개체
약한 개체 : 독자적으로는 존재할 수 없고 반드시 상위개체를 가지는 개체
강한 개체의 기본키와 식별키가 합쳐서서 약한 개체의 기본키 역할을 함.
의자왕(강한개체)의 1번궁녀-식별자 이런 느낌인듯?


관계와 관계 타입
Is-a 관계
상속처럼 (마찬가지로is a 관계)
하위 개체에 정보를 추가하는 느낌으로 이해하면 됨

ie 표기법에서 추가 필기

비식별자 관계 : 강한 타입, 부모 개체의 키(=외래키가 일반 속성인 경우)

식별자 관계 : 약한 개체 타입, 부모 개체의 키(=외래키가 기본키인 경우)

