1. url 선정: /board/like/게시글번호/추천또는비추천
 예) 7번 게시글 추천 또는 추천 취소 - /board/like/7/1
 예) 7번 게시글 비추천 또는 비추천 취소 - /board/like/7/-1

2. detail.jsp
 - 추천/비추천 버튼 클릭 이벤트를 등록
 - 클릭 했을 때 ajax를 이용하여 서버에 데이터를 전송
	- 게시글 번호를 가져옴
	- 추천/비추천 값을 가져옴(추천 : 1, 비추천: -1)
	- 서버에서 보낸 데이터를 이용하여 추천/비추천 버튼 숫자 및 색상 작업
 - ajax를 이용하기 위한 준비 작업(Docs 문서 참고)

3. 컨트롤러 
	- 메소드를 추가
	- value : /board/like/게시글 번호/추천 또는 비추천
	-method: get
	-@responseBody 추가 (ajax를 이용할 때 추가)
	-리턴 타입 : Map<String, Object>

테스트
4. LikesVO 추가
@Data
@NoArgsContructor
-게시글 번호, 회원 아이디, 추천 상태를 이용한 생성자

5. 컨트롤러
	- 메소드를 수정
	- 게시글 번호 확인(@PathVariable)
	- 추천/비추천값 확인(@PathVariable)
	- 회원정보
	- 서비스에게 게시글 번호, 회원 정보, 추천/비추천 값을 주면서 추천을 처리하라고 요청, 추천 비추천 여부를 알려달라고 요청
	- 추천이면: 1, 비추천 : -1, 취소: 0
	- Map에 추천/비추천 여부를 저장
	- 서비스에게 게시글 번호를 주면서 게시글 정보를 달라고 요청
	- 가져온 게시글 정보를 Map에 저장

6. 서비스/임플
 - 메소드 추가
 - 회원 정보 null 체크
 - Dao에게 게시글 번호, 아이디를 주면서 추천 정보를 가져오라고 요청(insert를 할지 update를 할지 결정해야 되기 때문에
 - 추천 정보가 없으면(insert)]
  - 게시글 번호, 아이디, 추천 상태를 이용하여 추천 객체를 생성
  - dao에게 추천 정보를 주면서 추가하라고 요청
  - 추가를 하면 추가한 상태를 리턴
 - 추천 정보가 있으면 (update)
	- 기존의 추천 상태와 현재 추천 상태가 다르면
		-게시글 번호, 아이디, 추천 상태를 이용하여 객체를 생성
		-dao에게 추천 정보를 주면서 수정하라고 요청
		- 수정을 하면 수정한 추천 상태를 리턴
	- 같으면(취소)
	 - 게시글 번호, 아이디, 추천상태(0)을 이용하여 객체를 생성
	- 다오에게 추천 정보를 주면서 수정하라고 요청
	- 수정을 하면 0을 리턴
  - 공통
   - 게시글의 bo_up, bo_down업데이트 하는 작업을 해줘야함.
	-dao에게 게시글 번호를 주고 bo_up과 bo_down을 업데이트하라고 시킴
	-게시글 추천 정보를 업데이트 하는 메소드
	-update문을 이용하여 작성

7. 다오/임플
  - 메소드 추가 및 쿼리 구현
   - 추천 정보 추가 메소드
	-insert문을 이용하여 작성
  - 추천 정보 수정 메소드
	-update문을 이용하여 작성
 - 추천 정보 가져오는 메소드
	-select문을 이용하여 작성
	-resultType설정

8. detail.jsp
- ajax를 이용하여 서버에서 받은 데이터를 이용하여 화면 구성
	- 추천/비추천 색상을 변경
	-추천 /비추천 수를 변경
9. 컨트롤러
- /board/detail/ 게시글 번호 메소드 수정
 - 로그인한 회원의 게시글 추천 정보를 가져오는 작업
	-회원 정보를 가져옴
	- 서비스에게 회원 정보, 게시글 정보를 주면서 추천 정보를 가져오라고 요청
	- 가져온 추천 정보를 화면에 전송
10. 서비스 임플
-메소드 추가 및 구현
	-회원 null 체크
	- dao에게 회원 아이디, 게시글 번호를 주면서 추천 정보를 가져오라고 요청 후 리턴

11. detail.jsp
-서버에서 보낸 추천 정보를 이용하여 초기 추천/비추천 색상을 구성


