요구사항 확인하기

요구사항이란 고객 및 소프트웨어 개발에 관계된 사람들이 시스템 개발에 앞서 개발되는 프로그램에 플요한 조건이나 능력을 말함

요구사항의 조건 4가지
명확성 : 기술된 요구사항은 항상 동일한 의미로 해석되어야함. -> 모호하지 않아야 함.
	선생님:	나중에 요구사항 작성했을 때 모호한 부분이 있으면 계속 질문할 것임. 
완전성 : 사용자가 기대하는 모든 요구사항이 기술되어야 함 -> 누락되어서는 안됨.
일관성 : 서로 상충되는 요구사항이 있어서는 안 됨
검증가능성 : 객관적으로 검증할 수 있도록 구체적이어야 함.
		'도서 검색은 최대한 빨리 수행되어야 한다.'-> 빠른의 기준은 무엇인가
		정확한 수치를 제시. 1초 이내처럼.
		-> 검색 범위에 관계없이 동일한 성능을 제공해야 하는가?
	우리 프로젝트에서 성능에 대한 검증 가능성은 아직 크게 신경 안써도 됨.
	나중에 취업했을 때는 필요. 

요구사항 정의 명세서
	1)프로젝트 명, 작성자, 작성일
	2)요구사항 분류

	3) 요구사항 id
	id는 모든 산출물 문서에 표시해야함.
	(프로젝트에서는 안해도 됨)
	
주의사항
1.요구사항 정의서 & 명세서 => 프로젝트 분석 단계의 가장 중요한 산출물
2.프로젝트가 끝나는 시점까지 요구사항은 늘어날 수 있음. 각 문서는 버전별로 관리
3. 무엇보다 이런 요구사항이 적용되었는지 추첮표를 작성하여 관리자는 항시 체크를 해야함.


유스케이스 다이어그램
액터 : 시스템과 상호작용을 하는 시스템 외부의 존재.
시스템 관점에서 바라본 사용자의 역할

유스케이스 usecase 시스템이 제공하는 개별적인 기능의 단위. 
액터 유스케이스 연관 관계 

활성화  액터 -> 유스케이스
수행결과 통보 유스케이스 결과 -> 액터
외부서비스 요청 외부시스템 -> 액터


연관관계 :  유스케이스와 액터 간 상호작용
포함관계 : 한 유스케이스가 다른 유스케이스의 기능을 포함하는 관계
	반드시 해야하는 관계. A를 수행하기 위해 B를 반드시 해야함. 개인정보 조회-로그인

확장관계 : 기본 유스케이스에서 특정 조건이나 액터의 선택에 따라 발생하는 유스케이스의
	선택적으로 할 수 있는 관계
일반화 관계 : 유사한 유스케이스들을 추상화하여 그룹핑 한 것


유스케이스는 시나리오 흐름, 시퀀스 구조를 생각하며 그리는 것이 아니다. 
각각 개별 유스케이스를 그리되, 개별 유스케이스들의 관계를 표현할 것.
(즉 제품조회->제품주문->주문결제 등으로 나타내지말고 각각을 별개로 하되 각 요소들의 관계를 명시할 것)

굳이 모든 관계를 표현하려고 하지 말것. 로그인의 포함관계를 표현하기 위해 
모든 요소와 선을 그으면 난잡해짐. 기정사실처럼 아는 것은 따로 빼서 

유스케이스는 구체화하되, 추상화 할 수 있는 부분은 추상화하라.






모델링
실체 -> 모델링 -> 모델
실체 <- 구현 <- 모델

요구사항 분석 설계 단계를 모델링단계라고 함.

UML은 통합 모델링 언어
Unified Modeling Language

구조 다이어그램 

행위 다이어그램


UML의 개발 필요성 
고객과 의사소통하기 쉽다
대규모 프로젝트의 로드맵을 만들때 유용
개발할 시스템 구축에 대한 기초를 마련할 수 있음.
	-모델링 툴에서 소스코드 생성 기능이 있음