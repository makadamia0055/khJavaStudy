공승배

1. true/false
 이유 :  문자열의 경우는 (이름이 기억안나는데 String 테이블?) 자바 내부에 문자열 저장하는 메모리 공간이 따로 있어
	문자열이 같은 경우 new로 새롭게 객체를 생성하는 것이 아니면, JVM에서 같은 객체를 공유하도록 한다.
	scan으로 입력받은 경우는 안해봐서 잘 모르겠는데 그간의 경험이나 굳이 문제로 낸걸 봐서는 
	new 생성자로 생성한 것과 같은 경우로 봐야하지 않나 싶다.

-->리터럴 문자열은 이미 사용된 문자열을 이용하는 경우, 새 리터럴 문자열을 생성하는 것이 아니라 
	기존에 선언된 리터럴 문자열의 주소를 알려준다.
	scan으로 입력받으면 리터럴 문자열이 아니라서 입력한 문자열이 앞에 사용중인 리터럴 문자열이더라도 새로 할당하여 주소를 넘겨줌
	그래서 두번째 출력은 공유하는게 아니기 때문에 다른 객체 리턴

해결방안 : 16번 라인 코드를 System.out.println(str1.equals(str3));으로 고친다.


2. 
원인: 생성자에 void가 있는 것. 생성자는 클래스에 해당하는 데이터형을 반환한다. 
	즉 클래스 형 데이터 타입을 반환하는데 void가 들어가 있다. 생성자도 메소드 임을 감안할때 메소드 기본 원칙에 위배.
해결방안 : void를 뺀다. 

-> 저거 자체를 메소드로 봄. 생성자로 안봄

3. 
결과: else 값인 "제목에 공지가 포함되어 있지 않습니다" 가 출력된다. 
  	 String객체의 equals메소드는 문자열이 같은지 비교하는 메소드이지, 포함관계를 따지지 않는다. 
해결방안: equals를 contains로 수정한다. 

-> 게시글 전체와 검색어 search를 비교하는데 
	board2.에 equals를 걸음. board2.getTitle()에 걸어야하는데.... (틀림)

4.
nullPointerException 예외 발생
	선언만하고 초기화 하지 않은 String str 은 참조변수로 null이 저장되는데 null인 상태인 객체를 그대로 사용하려고 하여
nullpointerException이 발생한다. 

-> 필드임 그거 까먹음

5. 실행 결과 : 예외 발생(예외 이름 모름)
	10번 라인 for 반복문 끝에 세미콜론;이 찍혀 있다. 그래서 반복문은 거기서 끝나고 i 가 출력되어야 하는데 
	i는 초기화 되지 않은 기본 변수로 값이 할당되지 않았다. 그래서 예외가 발생한다. 
해결방안:10번 라인의 세미콜론을 지우면 {}를 생략한 for문으로 인식되어 정상작동한다.


-> 11출력 반복문 자체가 실행되고 i값이 바뀌는걸 간과 (틀림)
